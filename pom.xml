<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.5.BUILD-SNAPSHOT</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.mchain.test</groupId>
	<artifactId>test.service</artifactId>
	<version>1</version>
	<name>test.service</name>
	<description>测试</description>

	<properties>
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    	<jjwt.version>0.9.1</jjwt.version>
		<maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>
		<!-- JWT -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>${jjwt.version}</version>
        </dependency>
		<!-- Postgresql -->
        <dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
	  	<!-- apollo.core -->
		<dependency>  
    		<groupId>com.mchain</groupId>  
    		<artifactId>apollo.core</artifactId>  
    		<version>1.1.0</version>  
    		<scope>system</scope>  
			<systemPath>${project.basedir}/libs/apollo.core-1.1.0.jar</systemPath>  
		</dependency>
		<!-- apollo.client -->
		<dependency>  
    		<groupId>com.mchain</groupId>  
    		<artifactId>apollo.client</artifactId>  
    		<version>1.1.0</version>  
    		<scope>system</scope>  
			<systemPath>${project.basedir}/libs/apollo.client-1.1.0.jar</systemPath>  
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
         		<directory>src/main/java</directory>
	            <includes>                      
	                <include>**/*.xml</include>
	            </includes>
	        </resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.*</include>
				</includes>
				<filtering>false</filtering>
			</resource>
		</resources>
  		<plugins>
  			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<argLine>-Xmx1024m -XX:MaxPermSize=256m</argLine>
					<testFailureIgnore>true</testFailureIgnore>
					<includeSystemScope>true</includeSystemScope>
				</configuration>
				<executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <mainClass>com.mchain.test.TestServiceApplication</mainClass>
                        </configuration>
                    </execution>
				</executions>
			</plugin>
	      	<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>1.0.0</version>
				<configuration>
					<imageName>test.service:1</imageName>
					<dockerDirectory>src/main/docker</dockerDirectory>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
						<resource>
            				<directory>src/main/java</directory>
				            <includes>                      
				                <include>**/*.xml</include>
				            </includes>
				        </resource>
						<resource>
							<directory>src/main/resources</directory>
							<includes>
                    			<include>**/*.properties</include>
                    			<include>**/*.xml</include>
                    			<include>**/*.html</include>
                    			<include>**/static/*.*</include>
                			</includes>
							<filtering>false</filtering>
						</resource>
					</resources>
				</configuration>
			</plugin>
  		</plugins>
	</build>
	<repositories>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
		</pluginRepository>
	</pluginRepositories>

</project>
